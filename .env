# In all environments, the following files are loaded if they exist,
# the latter taking precedence over the former:
#
#  * .env                contains default values for the environment variables needed by the app
#  * .env.local          uncommitted file with local overrides
#  * .env.$APP_ENV       committed environment-specific defaults
#  * .env.$APP_ENV.local uncommitted environment-specific overrides
#
# Real environment variables win over .env files.
#
# DO NOT DEFINE PRODUCTION SECRETS IN THIS FILE NOR IN ANY OTHER COMMITTED FILES.
# https://symfony.com/doc/current/configuration/secrets.html
#
# Run "composer dump-env prod" to compile .env files for production use (requires symfony/flex >=1.2).
# https://symfony.com/doc/current/best_practices.html#use-environment-variables-for-infrastructure-configuration

###> docker compose configuration ###
COMPOSE_PROJECT_NAME=environment2
###< docker compose configuration ###

###> Apache docker configuration. Can be overridden in: .env.local, .env.staging, .env.prod. ###
WEB_PORT_HTTP=80
WEB_PORT_SSL=443
###< Apache docker configuration ###

###> XDebug docker configuration. Can be overridden in: .env.local. ###
# XDEBUG_CONFIG possible values: main|osx. Use main value for Linux and Windows, osx value for MacOS.
XDEBUG_CONFIG=main
# Sometimes we need to use different xdebug versions, list of versions can be found here - https://pecl.php.net/package/xdebug
XDEBUG_VERSION=3.4.4
###< XDebug docker configuration ###

###> MySQL docker configuration. Can be overridden in: .env.local, .env.staging, .env.prod. ###
# MySQL version, recommend values: 9.3.0|8.4.5|8.3.0|8.2.0|8.1.0|8.0.39
MYSQL_VERSION=8.4.5
# MySQL INNODB_USE_NATIVE_AIO possible values: 1|0. Set to 0 when AIO interface is not supported on OSX. https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_use_native_aio
INNODB_USE_NATIVE_AIO=1
# Sometimes AWS MySQL RDS has SQL_MODE="NO_ENGINE_SUBSTITUTION" (https://github.com/awsdocs/amazon-rds-user-guide/issues/160) but MySQL default described here - https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_sql_mode
SQL_MODE="ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"
MYSQL_ROOT_PASSWORD=secret
MYSQL_PORT=33061
###< MySQL docker configuration ###

###> RabbitMQ docker configuration. Can be overridden in: .env.local, .env.staging, .env.prod. ###
RABBITMQ_ERLANG_COOKIE=7ead507151fc4461b9f45c1161384a04
RABBITMQ_USER=guest
RABBITMQ_PASS=guest
RABBITMQ_MANAGEMENT_PORT=15672
###< RabbitMQ docker configuration ###

###> symfony/framework-bundle ###
APP_ENV=dev
APP_DEBUG=1
APP_SECRET=42f011ec3a7bde0bec87364b1d967193
TRUSTED_PROXIES=127.0.0.1,REMOTE_ADDR
#TRUSTED_HOSTS='^localhost|example\.com$'
###< symfony/framework-bundle ###

###> doctrine/doctrine-bundle ###
# Format described at https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url
# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
#
# DATABASE_URL="sqlite:///%kernel.project_dir%/var/data.db"
# DATABASE_URL="postgresql://app:!ChangeMe!@127.0.0.1:5432/app?serverVersion=15&charset=utf8"
DATABASE_URL=mysql://root:${MYSQL_ROOT_PASSWORD}@mysql:3306/symfony
###< doctrine/doctrine-bundle ###

###> symfony/mailer ###
MAILER_DSN=smtp://user:pass@mail:1025
###< symfony/mailer ###

###> symfony/messenger ###
MESSENGER_TRANSPORT_DSN=amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@rabbitmq:5672/%2f/messages
###< symfony/messenger ###

###> symfony/lock ###
# Choose one of the stores below
# postgresql+advisory://db_user:db_password@localhost/db_name
LOCK_DSN=flock
###< symfony/lock ###
